@model SuperDamp.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = null;
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    
<div class="form-horizontal">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(Model => Model.Name, new
                            {
                                htmlAttributes = new { @class = "form-control" }
                            })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(Model => Model.Price, new
                            {
                                htmlAttributes = new { @class = "form-control" }
                            })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.imageURL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(Model => Model.imageURL, new
                            {
                                htmlAttributes = new { @class = "form-control" }
                            })
            @Html.ValidationMessageFor(model => model.imageURL, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(Model => Model.Description, new
                            {
                                htmlAttributes = new { @class = "form-control" }
                            })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(Model => Model.Sex, new
                            {
                                htmlAttributes = new { @class = "form-control" }
                            })
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(Model => Model.Category, new
        {
             htmlAttributes = new { @class = "form-control" }
         })
        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        @if (ViewBag.error != null)
        {
            <span class="badge badge-danger">@ViewBag.error</span>}
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Sign in</button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Admin_Product","Admin")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
